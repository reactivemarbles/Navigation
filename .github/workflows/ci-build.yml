name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  configuration: Release
  productNamespacePrefix: "ReactiveMarbles"

jobs:
  build:
    runs-on: windows-2022
    outputs:
      nbgv: ${{ steps.nbgv.outputs.SemVer2 }}
    steps:

    - name: 'Setup Java JDK 11'
      uses: actions/setup-java@v4.0.0
      with:
         distribution: 'microsoft'
         java-version: '11'

    # - name: Get Current Visual Studio Information
    #   shell: bash
    #   run: |
    #     dotnet tool update -g dotnet-vs
    #     echo "-- About RELEASE --"
    #     vs where release
        
    # - name: Update Visual Studio Latest Release
    #   shell: bash
    #   run: |
    #     echo "-- Update RELEASE --"
    #     vs update release Enterprise
    #     vs modify release Enterprise +mobile +desktop +uwp +web
    #     echo "-- About RELEASE Updated --"
    #     vs where release

    - name: Checkout
      uses: actions/checkout@v4.1.1
      with:
        fetch-depth: 0
        lfs: true
        
    - name: Install .NET 6/7/8
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: |
            6.0.x
            7.0.x
            8.0.x

    - name: Install DotNet workloads
      shell: bash
      run: |
        dotnet workload install android ios tvos macos maui maccatalyst

    - name: NBGV
      id: nbgv
      uses: dotnet/nbgv@master
      with:
        setAllVars: true

    - name: NuGet Restore
      run: dotnet restore
      working-directory: src
      
    - name: Build
      run: dotnet build --configuration=${{ env.configuration }} --verbosity=minimal --no-restore
      working-directory: src

    - name: Run Unit Tests and Generate Coverage
      uses: glennawatson/coverlet-msbuild@v2.1
      with:
        project-files: '**/*Tests*.csproj'
        no-build: true
        exclude-filter: '[${{env.productNamespacePrefix}}.*.Tests.*]*'
        include-filter: '[${{env.productNamespacePrefix}}*]*'
        output-format: cobertura
        configuration: ${{ env.configuration }}

    - name: Pack
      run: dotnet pack --configuration=${{ env.configuration }} --verbosity=minimal --no-restore
      working-directory: src

    - name: Upload Code Coverage
      uses: codecov/codecov-action@v4

    - name: Create NuGet Artifacts
      uses: actions/upload-artifact@master
      with:
        name: nuget
        path: '**/*.nupkg'
